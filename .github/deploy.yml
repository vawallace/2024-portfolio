name: 'Deploy to Digital Ocean Droplet'
on:
  push:
    branches:
      - main
jobs:
  predeloy:
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
      CDK_DEFAULT_REGION: ${{ secrets.CDK_DEFAULT_REGION }}
      VITE_FONT_AWESOME_KEY: ${{ secrets.FONT_AWESOME_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      #############################
      # Setup FontAwesome #
      #############################
      - name: setup fontawesome
        run: |
          touch .npmrc
          echo "@fortawesome:registry=https://npm.fontawesome.com/" >> .npmrc
          echo "//npm.fontawesome.com/:_authToken=${{ env.VITE_FONT_AWESOME_KEY }}" >> .npmrc
      #############################
      # Install and Cache node modules #
      #############################
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm install
      #############################
      # Build #
      #############################
      - name: Build
        run: npm run build
      #############################
      # Configure AWS #
      - name: Configure AWS Credentials ðŸ”§
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.CDK_DEFAULT_REGION }}
      #############################
      # Deploy using CDK #
      #############################
      - name: Deploy
        run: npx cdk deploy --require-approval never
        